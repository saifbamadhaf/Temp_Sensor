
GccApplication7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  0000085a  000008ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000085a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000948  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b02  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000786  00000000  00000000  0000151a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004bc  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  0000215c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000585  00000000  00000000  00002298  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001d0  00000000  00000000  0000281d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  000029ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e5       	ldi	r30, 0x5A	; 90
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 31       	cpi	r26, 0x1C	; 28
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 2e 01 	call	0x25c	; 0x25c <main>
  8e:	0c 94 2b 04 	jmp	0x856	; 0x856 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <_Z10USART_Initv>:
#define WRITE 0x00
#define READ 0x01

// Initialize USART
void USART_Init(void) {
	UBRR0H = (UBRRn >> 8);
  96:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = UBRRn;
  9a:	87 e6       	ldi	r24, 0x67	; 103
  9c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0); // Enable receiver and transmitter
  a0:	88 e1       	ldi	r24, 0x18	; 24
  a2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Set format: 8 data bits, 1 stop bit between each 8 bits
  a6:	86 e0       	ldi	r24, 0x06	; 6
  a8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  ac:	08 95       	ret

000000ae <_Z14USART_Transmith>:
}

// Transmit data via USART
void USART_Transmit(unsigned char data) {
	while (!(UCSR0A & (1 << UDRE0))); // Wait for  until u can send data
  ae:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  b2:	95 ff       	sbrs	r25, 5
  b4:	fc cf       	rjmp	.-8      	; 0xae <_Z14USART_Transmith>
	UDR0 = data; // Put data into buffer, sends the data
  b6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  ba:	08 95       	ret

000000bc <_Z11USART_PrintPKc>:
}

// Print string via USART
void USART_Print(const char *s) {
  bc:	cf 93       	push	r28
  be:	df 93       	push	r29
  c0:	ec 01       	movw	r28, r24
	while (*s) {
  c2:	88 81       	ld	r24, Y
  c4:	88 23       	and	r24, r24
  c6:	21 f0       	breq	.+8      	; 0xd0 <_Z11USART_PrintPKc+0x14>
		USART_Transmit(*s++); // iterates through each char till null. when null is reached it send the character to transmission.
  c8:	21 96       	adiw	r28, 0x01	; 1
  ca:	0e 94 57 00 	call	0xae	; 0xae <_Z14USART_Transmith>
	UDR0 = data; // Put data into buffer, sends the data
}

// Print string via USART
void USART_Print(const char *s) {
	while (*s) {
  ce:	f9 cf       	rjmp	.-14     	; 0xc2 <_Z11USART_PrintPKc+0x6>
		USART_Transmit(*s++); // iterates through each char till null. when null is reached it send the character to transmission.
	}
}
  d0:	df 91       	pop	r29
  d2:	cf 91       	pop	r28
  d4:	08 95       	ret

000000d6 <_Z8i2c_initv>:
// Initialize I2C interface
void i2c_init(void) {
// Set prescaler to 1 (TWPS0=0 TWPS1 = 0)
// TWSR &= ~(1 << TWPS0); // not needed as TWPS0 TWPS1 are initially 0
// TWSR &= ~(1 << TWPS1);
	TWBR = ((F_CPU / 100000UL) / 2) - 8; // Set SCL frequency p.222
  d6:	88 e4       	ldi	r24, 0x48	; 72
  d8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  dc:	08 95       	ret

000000de <_Z9i2c_startv>:
}

// Start I2C communication
void i2c_start(void) {
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN); // Start condition. TWINT Flag, TWSTA Start, TWEN Enable TWI.
  de:	84 ea       	ldi	r24, 0xA4	; 164
  e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT))); // Wait for TWINT to clear
  e4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  e8:	88 23       	and	r24, r24
  ea:	e4 f7       	brge	.-8      	; 0xe4 <_Z9i2c_startv+0x6>
}
  ec:	08 95       	ret

000000ee <_Z8i2c_stopv>:

// Stop I2C communication
void i2c_stop(void) {
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN); // Stop condition
  ee:	84 e9       	ldi	r24, 0x94	; 148
  f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  f4:	08 95       	ret

000000f6 <_Z9i2c_writeh>:
}

// Write data to I2C
void i2c_write(uint8_t data) {
	TWDR = data;
  f6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1 << TWINT) | (1 << TWEN);
  fa:	84 e8       	ldi	r24, 0x84	; 132
  fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 100:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 104:	88 23       	and	r24, r24
 106:	e4 f7       	brge	.-8      	; 0x100 <_Z9i2c_writeh+0xa>
}
 108:	08 95       	ret

0000010a <_Z12i2c_read_ackv>:

// Read data with ACK from I2C
uint8_t i2c_read_ack(void) {
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
 10a:	84 ec       	ldi	r24, 0xC4	; 196
 10c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 110:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 114:	88 23       	and	r24, r24
 116:	e4 f7       	brge	.-8      	; 0x110 <_Z12i2c_read_ackv+0x6>
	return TWDR;
 118:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 11c:	08 95       	ret

0000011e <_Z13i2c_read_nackv>:

// Read data with NACK from I2C
uint8_t i2c_read_nack(void) {
	TWCR = (1 << TWINT) | (1 << TWEN);
 11e:	84 e8       	ldi	r24, 0x84	; 132
 120:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1 << TWINT)));
 124:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 128:	88 23       	and	r24, r24
 12a:	e4 f7       	brge	.-8      	; 0x124 <_Z13i2c_read_nackv+0x6>
	return TWDR;
 12c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
 130:	08 95       	ret

00000132 <_Z15init_TempSensorv>:

// Initialize DS1621 temperature sensor
void init_TempSensor(void) {
	i2c_start();
 132:	0e 94 6f 00 	call	0xde	; 0xde <_Z9i2c_startv>
	i2c_write(TEMP_SENSOR_ADDR << 1 | WRITE); // Write mode
 136:	80 e9       	ldi	r24, 0x90	; 144
 138:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_write(0xEE); // Start Convert T command
 13c:	8e ee       	ldi	r24, 0xEE	; 238
 13e:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_stop();
 142:	0e 94 77 00 	call	0xee	; 0xee <_Z8i2c_stopv>
 146:	08 95       	ret

00000148 <_Z15init_IOEXPANDERv>:
}

// Initialize MCP23008 IO expander
void init_IOEXPANDER(void) {
	i2c_start();
 148:	0e 94 6f 00 	call	0xde	; 0xde <_Z9i2c_startv>
	i2c_write(IO_EXPANDER_ADDR << 1);
 14c:	80 e4       	ldi	r24, 0x40	; 64
 14e:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_write(IODIR); // IODIR register address, configure all pins as output
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_write(0x00); // Set all pins as output
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_stop();
 15e:	0e 94 77 00 	call	0xee	; 0xee <_Z8i2c_stopv>
 162:	08 95       	ret

00000164 <_Z16write_IOEXPANDERh>:
}

// Write data to MCP23008 GPIO register
void write_IOEXPANDER(uint8_t data) {
 164:	cf 93       	push	r28
 166:	c8 2f       	mov	r28, r24
	i2c_start();
 168:	0e 94 6f 00 	call	0xde	; 0xde <_Z9i2c_startv>
	i2c_write(IO_EXPANDER_ADDR << 1 | WRITE); // Write mode
 16c:	80 e4       	ldi	r24, 0x40	; 64
 16e:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_write(GPIO); // GPIO register address
 172:	89 e0       	ldi	r24, 0x09	; 9
 174:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_write((uint8_t)data); // Write the temperature value directly to GPIO register
 178:	8c 2f       	mov	r24, r28
 17a:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_stop();
 17e:	0e 94 77 00 	call	0xee	; 0xee <_Z8i2c_stopv>
}
 182:	cf 91       	pop	r28
 184:	08 95       	ret

00000186 <_Z5setupv>:

// Setup function
void setup(void) {
	USART_Init(); // Initialize USART
 186:	0e 94 4b 00 	call	0x96	; 0x96 <_Z10USART_Initv>
	i2c_init(); // Initialize I2C interface
 18a:	0e 94 6b 00 	call	0xd6	; 0xd6 <_Z8i2c_initv>
	init_IOEXPANDER(); // Initialize MCP23008
 18e:	0e 94 a4 00 	call	0x148	; 0x148 <_Z15init_IOEXPANDERv>
 192:	08 95       	ret

00000194 <_Z4loopv>:
}

// Main loop
void loop(void) {
 194:	ef 92       	push	r14
 196:	ff 92       	push	r15
 198:	0f 93       	push	r16
 19a:	1f 93       	push	r17
 19c:	cf 93       	push	r28
 19e:	df 93       	push	r29
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	6e 97       	sbiw	r28, 0x1e	; 30
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	f8 94       	cli
 1aa:	de bf       	out	0x3e, r29	; 62
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b0:	2f e3       	ldi	r18, 0x3F	; 63
 1b2:	8d e0       	ldi	r24, 0x0D	; 13
 1b4:	93 e0       	ldi	r25, 0x03	; 3
 1b6:	21 50       	subi	r18, 0x01	; 1
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	90 40       	sbci	r25, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <_Z4loopv+0x22>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <_Z4loopv+0x2c>
 1c0:	00 00       	nop
	int temp = 0; // Whole part of the temperature
	int tempFraction = 0; // Fractional part of the temperature

	_delay_ms(1000); // Give time for measurement

	init_TempSensor(); // Initialize DS1621 temperature sensor
 1c2:	0e 94 99 00 	call	0x132	; 0x132 <_Z15init_TempSensorv>

	i2c_start();
 1c6:	0e 94 6f 00 	call	0xde	; 0xde <_Z9i2c_startv>
	i2c_write(TEMP_SENSOR_ADDR << 1 | WRITE); // Write mode
 1ca:	80 e9       	ldi	r24, 0x90	; 144
 1cc:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_write(0xAA); // Read temperature command
 1d0:	8a ea       	ldi	r24, 0xAA	; 170
 1d2:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	i2c_stop();
 1d6:	0e 94 77 00 	call	0xee	; 0xee <_Z8i2c_stopv>

	i2c_start();
 1da:	0e 94 6f 00 	call	0xde	; 0xde <_Z9i2c_startv>
	i2c_write(TEMP_SENSOR_ADDR << 1 | READ); // Read mode
 1de:	81 e9       	ldi	r24, 0x91	; 145
 1e0:	0e 94 7b 00 	call	0xf6	; 0xf6 <_Z9i2c_writeh>
	temp = (int8_t)i2c_read_ack(); // Read temperature as signed int
 1e4:	0e 94 85 00 	call	0x10a	; 0x10a <_Z12i2c_read_ackv>
 1e8:	18 2f       	mov	r17, r24
 1ea:	e8 2e       	mov	r14, r24
 1ec:	88 0f       	add	r24, r24
 1ee:	ff 08       	sbc	r15, r15
	tempFraction = i2c_read_nack() & 0b10000000; // Extract MSB (9th bit) of the LSB
 1f0:	0e 94 8f 00 	call	0x11e	; 0x11e <_Z13i2c_read_nackv>
 1f4:	08 2f       	mov	r16, r24
	i2c_stop();
 1f6:	0e 94 77 00 	call	0xee	; 0xee <_Z8i2c_stopv>

	// Display temperature on LEDs in binary format
	write_IOEXPANDER(temp);
 1fa:	81 2f       	mov	r24, r17
 1fc:	0e 94 b2 00 	call	0x164	; 0x164 <_Z16write_IOEXPANDERh>
	
	// int tempF = temp * 9 / 5 + 32; for F

	// Print temperature value to serial monitor
	snprintf(buffer, sizeof(buffer), "Temperature: %d.%d Celsius\n", temp, tempFraction ? 5 : 0);
 200:	00 23       	and	r16, r16
 202:	1c f4       	brge	.+6      	; 0x20a <_Z4loopv+0x76>
 204:	85 e0       	ldi	r24, 0x05	; 5
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	02 c0       	rjmp	.+4      	; 0x20e <_Z4loopv+0x7a>
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	9f 93       	push	r25
 210:	8f 93       	push	r24
 212:	ff 92       	push	r15
 214:	1f 93       	push	r17
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	91 e0       	ldi	r25, 0x01	; 1
 21a:	9f 93       	push	r25
 21c:	8f 93       	push	r24
 21e:	1f 92       	push	r1
 220:	8e e1       	ldi	r24, 0x1E	; 30
 222:	8f 93       	push	r24
 224:	8e 01       	movw	r16, r28
 226:	0f 5f       	subi	r16, 0xFF	; 255
 228:	1f 4f       	sbci	r17, 0xFF	; 255
 22a:	1f 93       	push	r17
 22c:	0f 93       	push	r16
 22e:	0e 94 33 01 	call	0x266	; 0x266 <snprintf>

	USART_Print(buffer);
 232:	c8 01       	movw	r24, r16
 234:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z11USART_PrintPKc>
}
 238:	0f b6       	in	r0, 0x3f	; 63
 23a:	f8 94       	cli
 23c:	de bf       	out	0x3e, r29	; 62
 23e:	0f be       	out	0x3f, r0	; 63
 240:	cd bf       	out	0x3d, r28	; 61
 242:	6e 96       	adiw	r28, 0x1e	; 30
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	f8 94       	cli
 248:	de bf       	out	0x3e, r29	; 62
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	cd bf       	out	0x3d, r28	; 61
 24e:	df 91       	pop	r29
 250:	cf 91       	pop	r28
 252:	1f 91       	pop	r17
 254:	0f 91       	pop	r16
 256:	ff 90       	pop	r15
 258:	ef 90       	pop	r14
 25a:	08 95       	ret

0000025c <main>:


int main(void) {
	setup();
 25c:	0e 94 c3 00 	call	0x186	; 0x186 <_Z5setupv>
	while (1) {
		loop();
 260:	0e 94 ca 00 	call	0x194	; 0x194 <_Z4loopv>
 264:	fd cf       	rjmp	.-6      	; 0x260 <main+0x4>

00000266 <snprintf>:
 266:	ae e0       	ldi	r26, 0x0E	; 14
 268:	b0 e0       	ldi	r27, 0x00	; 0
 26a:	e9 e3       	ldi	r30, 0x39	; 57
 26c:	f1 e0       	ldi	r31, 0x01	; 1
 26e:	0c 94 02 04 	jmp	0x804	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 272:	0d 89       	ldd	r16, Y+21	; 0x15
 274:	1e 89       	ldd	r17, Y+22	; 0x16
 276:	8f 89       	ldd	r24, Y+23	; 0x17
 278:	98 8d       	ldd	r25, Y+24	; 0x18
 27a:	26 e0       	ldi	r18, 0x06	; 6
 27c:	2c 83       	std	Y+4, r18	; 0x04
 27e:	1a 83       	std	Y+2, r17	; 0x02
 280:	09 83       	std	Y+1, r16	; 0x01
 282:	97 ff       	sbrs	r25, 7
 284:	02 c0       	rjmp	.+4      	; 0x28a <snprintf+0x24>
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	90 e8       	ldi	r25, 0x80	; 128
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	9e 83       	std	Y+6, r25	; 0x06
 28e:	8d 83       	std	Y+5, r24	; 0x05
 290:	ae 01       	movw	r20, r28
 292:	45 5e       	subi	r20, 0xE5	; 229
 294:	5f 4f       	sbci	r21, 0xFF	; 255
 296:	69 8d       	ldd	r22, Y+25	; 0x19
 298:	7a 8d       	ldd	r23, Y+26	; 0x1a
 29a:	ce 01       	movw	r24, r28
 29c:	01 96       	adiw	r24, 0x01	; 1
 29e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <vfprintf>
 2a2:	4d 81       	ldd	r20, Y+5	; 0x05
 2a4:	5e 81       	ldd	r21, Y+6	; 0x06
 2a6:	57 fd       	sbrc	r21, 7
 2a8:	0a c0       	rjmp	.+20     	; 0x2be <snprintf+0x58>
 2aa:	2f 81       	ldd	r18, Y+7	; 0x07
 2ac:	38 85       	ldd	r19, Y+8	; 0x08
 2ae:	42 17       	cp	r20, r18
 2b0:	53 07       	cpc	r21, r19
 2b2:	0c f4       	brge	.+2      	; 0x2b6 <snprintf+0x50>
 2b4:	9a 01       	movw	r18, r20
 2b6:	f8 01       	movw	r30, r16
 2b8:	e2 0f       	add	r30, r18
 2ba:	f3 1f       	adc	r31, r19
 2bc:	10 82       	st	Z, r1
 2be:	2e 96       	adiw	r28, 0x0e	; 14
 2c0:	e4 e0       	ldi	r30, 0x04	; 4
 2c2:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__epilogue_restores__+0x1c>

000002c6 <vfprintf>:
 2c6:	ab e0       	ldi	r26, 0x0B	; 11
 2c8:	b0 e0       	ldi	r27, 0x00	; 0
 2ca:	e9 e6       	ldi	r30, 0x69	; 105
 2cc:	f1 e0       	ldi	r31, 0x01	; 1
 2ce:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <__prologue_saves__>
 2d2:	6c 01       	movw	r12, r24
 2d4:	7b 01       	movw	r14, r22
 2d6:	8a 01       	movw	r16, r20
 2d8:	fc 01       	movw	r30, r24
 2da:	17 82       	std	Z+7, r1	; 0x07
 2dc:	16 82       	std	Z+6, r1	; 0x06
 2de:	83 81       	ldd	r24, Z+3	; 0x03
 2e0:	81 ff       	sbrs	r24, 1
 2e2:	cc c1       	rjmp	.+920    	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 2e4:	ce 01       	movw	r24, r28
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	3c 01       	movw	r6, r24
 2ea:	f6 01       	movw	r30, r12
 2ec:	93 81       	ldd	r25, Z+3	; 0x03
 2ee:	f7 01       	movw	r30, r14
 2f0:	93 fd       	sbrc	r25, 3
 2f2:	85 91       	lpm	r24, Z+
 2f4:	93 ff       	sbrs	r25, 3
 2f6:	81 91       	ld	r24, Z+
 2f8:	7f 01       	movw	r14, r30
 2fa:	88 23       	and	r24, r24
 2fc:	09 f4       	brne	.+2      	; 0x300 <vfprintf+0x3a>
 2fe:	ba c1       	rjmp	.+884    	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 300:	85 32       	cpi	r24, 0x25	; 37
 302:	39 f4       	brne	.+14     	; 0x312 <vfprintf+0x4c>
 304:	93 fd       	sbrc	r25, 3
 306:	85 91       	lpm	r24, Z+
 308:	93 ff       	sbrs	r25, 3
 30a:	81 91       	ld	r24, Z+
 30c:	7f 01       	movw	r14, r30
 30e:	85 32       	cpi	r24, 0x25	; 37
 310:	29 f4       	brne	.+10     	; 0x31c <vfprintf+0x56>
 312:	b6 01       	movw	r22, r12
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 31a:	e7 cf       	rjmp	.-50     	; 0x2ea <vfprintf+0x24>
 31c:	91 2c       	mov	r9, r1
 31e:	21 2c       	mov	r2, r1
 320:	31 2c       	mov	r3, r1
 322:	ff e1       	ldi	r31, 0x1F	; 31
 324:	f3 15       	cp	r31, r3
 326:	d8 f0       	brcs	.+54     	; 0x35e <vfprintf+0x98>
 328:	8b 32       	cpi	r24, 0x2B	; 43
 32a:	79 f0       	breq	.+30     	; 0x34a <vfprintf+0x84>
 32c:	38 f4       	brcc	.+14     	; 0x33c <vfprintf+0x76>
 32e:	80 32       	cpi	r24, 0x20	; 32
 330:	79 f0       	breq	.+30     	; 0x350 <vfprintf+0x8a>
 332:	83 32       	cpi	r24, 0x23	; 35
 334:	a1 f4       	brne	.+40     	; 0x35e <vfprintf+0x98>
 336:	23 2d       	mov	r18, r3
 338:	20 61       	ori	r18, 0x10	; 16
 33a:	1d c0       	rjmp	.+58     	; 0x376 <vfprintf+0xb0>
 33c:	8d 32       	cpi	r24, 0x2D	; 45
 33e:	61 f0       	breq	.+24     	; 0x358 <vfprintf+0x92>
 340:	80 33       	cpi	r24, 0x30	; 48
 342:	69 f4       	brne	.+26     	; 0x35e <vfprintf+0x98>
 344:	23 2d       	mov	r18, r3
 346:	21 60       	ori	r18, 0x01	; 1
 348:	16 c0       	rjmp	.+44     	; 0x376 <vfprintf+0xb0>
 34a:	83 2d       	mov	r24, r3
 34c:	82 60       	ori	r24, 0x02	; 2
 34e:	38 2e       	mov	r3, r24
 350:	e3 2d       	mov	r30, r3
 352:	e4 60       	ori	r30, 0x04	; 4
 354:	3e 2e       	mov	r3, r30
 356:	2a c0       	rjmp	.+84     	; 0x3ac <vfprintf+0xe6>
 358:	f3 2d       	mov	r31, r3
 35a:	f8 60       	ori	r31, 0x08	; 8
 35c:	1d c0       	rjmp	.+58     	; 0x398 <vfprintf+0xd2>
 35e:	37 fc       	sbrc	r3, 7
 360:	2d c0       	rjmp	.+90     	; 0x3bc <vfprintf+0xf6>
 362:	20 ed       	ldi	r18, 0xD0	; 208
 364:	28 0f       	add	r18, r24
 366:	2a 30       	cpi	r18, 0x0A	; 10
 368:	40 f0       	brcs	.+16     	; 0x37a <vfprintf+0xb4>
 36a:	8e 32       	cpi	r24, 0x2E	; 46
 36c:	b9 f4       	brne	.+46     	; 0x39c <vfprintf+0xd6>
 36e:	36 fc       	sbrc	r3, 6
 370:	81 c1       	rjmp	.+770    	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 372:	23 2d       	mov	r18, r3
 374:	20 64       	ori	r18, 0x40	; 64
 376:	32 2e       	mov	r3, r18
 378:	19 c0       	rjmp	.+50     	; 0x3ac <vfprintf+0xe6>
 37a:	36 fe       	sbrs	r3, 6
 37c:	06 c0       	rjmp	.+12     	; 0x38a <vfprintf+0xc4>
 37e:	8a e0       	ldi	r24, 0x0A	; 10
 380:	98 9e       	mul	r9, r24
 382:	20 0d       	add	r18, r0
 384:	11 24       	eor	r1, r1
 386:	92 2e       	mov	r9, r18
 388:	11 c0       	rjmp	.+34     	; 0x3ac <vfprintf+0xe6>
 38a:	ea e0       	ldi	r30, 0x0A	; 10
 38c:	2e 9e       	mul	r2, r30
 38e:	20 0d       	add	r18, r0
 390:	11 24       	eor	r1, r1
 392:	22 2e       	mov	r2, r18
 394:	f3 2d       	mov	r31, r3
 396:	f0 62       	ori	r31, 0x20	; 32
 398:	3f 2e       	mov	r3, r31
 39a:	08 c0       	rjmp	.+16     	; 0x3ac <vfprintf+0xe6>
 39c:	8c 36       	cpi	r24, 0x6C	; 108
 39e:	21 f4       	brne	.+8      	; 0x3a8 <vfprintf+0xe2>
 3a0:	83 2d       	mov	r24, r3
 3a2:	80 68       	ori	r24, 0x80	; 128
 3a4:	38 2e       	mov	r3, r24
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <vfprintf+0xe6>
 3a8:	88 36       	cpi	r24, 0x68	; 104
 3aa:	41 f4       	brne	.+16     	; 0x3bc <vfprintf+0xf6>
 3ac:	f7 01       	movw	r30, r14
 3ae:	93 fd       	sbrc	r25, 3
 3b0:	85 91       	lpm	r24, Z+
 3b2:	93 ff       	sbrs	r25, 3
 3b4:	81 91       	ld	r24, Z+
 3b6:	7f 01       	movw	r14, r30
 3b8:	81 11       	cpse	r24, r1
 3ba:	b3 cf       	rjmp	.-154    	; 0x322 <vfprintf+0x5c>
 3bc:	98 2f       	mov	r25, r24
 3be:	9f 7d       	andi	r25, 0xDF	; 223
 3c0:	95 54       	subi	r25, 0x45	; 69
 3c2:	93 30       	cpi	r25, 0x03	; 3
 3c4:	28 f4       	brcc	.+10     	; 0x3d0 <vfprintf+0x10a>
 3c6:	0c 5f       	subi	r16, 0xFC	; 252
 3c8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ca:	9f e3       	ldi	r25, 0x3F	; 63
 3cc:	99 83       	std	Y+1, r25	; 0x01
 3ce:	0d c0       	rjmp	.+26     	; 0x3ea <vfprintf+0x124>
 3d0:	83 36       	cpi	r24, 0x63	; 99
 3d2:	31 f0       	breq	.+12     	; 0x3e0 <vfprintf+0x11a>
 3d4:	83 37       	cpi	r24, 0x73	; 115
 3d6:	71 f0       	breq	.+28     	; 0x3f4 <vfprintf+0x12e>
 3d8:	83 35       	cpi	r24, 0x53	; 83
 3da:	09 f0       	breq	.+2      	; 0x3de <vfprintf+0x118>
 3dc:	59 c0       	rjmp	.+178    	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 3de:	21 c0       	rjmp	.+66     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3e0:	f8 01       	movw	r30, r16
 3e2:	80 81       	ld	r24, Z
 3e4:	89 83       	std	Y+1, r24	; 0x01
 3e6:	0e 5f       	subi	r16, 0xFE	; 254
 3e8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ea:	88 24       	eor	r8, r8
 3ec:	83 94       	inc	r8
 3ee:	91 2c       	mov	r9, r1
 3f0:	53 01       	movw	r10, r6
 3f2:	13 c0       	rjmp	.+38     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 3f4:	28 01       	movw	r4, r16
 3f6:	f2 e0       	ldi	r31, 0x02	; 2
 3f8:	4f 0e       	add	r4, r31
 3fa:	51 1c       	adc	r5, r1
 3fc:	f8 01       	movw	r30, r16
 3fe:	a0 80       	ld	r10, Z
 400:	b1 80       	ldd	r11, Z+1	; 0x01
 402:	36 fe       	sbrs	r3, 6
 404:	03 c0       	rjmp	.+6      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 406:	69 2d       	mov	r22, r9
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40c:	6f ef       	ldi	r22, 0xFF	; 255
 40e:	7f ef       	ldi	r23, 0xFF	; 255
 410:	c5 01       	movw	r24, r10
 412:	0e 94 4f 03 	call	0x69e	; 0x69e <strnlen>
 416:	4c 01       	movw	r8, r24
 418:	82 01       	movw	r16, r4
 41a:	f3 2d       	mov	r31, r3
 41c:	ff 77       	andi	r31, 0x7F	; 127
 41e:	3f 2e       	mov	r3, r31
 420:	16 c0       	rjmp	.+44     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 422:	28 01       	movw	r4, r16
 424:	22 e0       	ldi	r18, 0x02	; 2
 426:	42 0e       	add	r4, r18
 428:	51 1c       	adc	r5, r1
 42a:	f8 01       	movw	r30, r16
 42c:	a0 80       	ld	r10, Z
 42e:	b1 80       	ldd	r11, Z+1	; 0x01
 430:	36 fe       	sbrs	r3, 6
 432:	03 c0       	rjmp	.+6      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 434:	69 2d       	mov	r22, r9
 436:	70 e0       	ldi	r23, 0x00	; 0
 438:	02 c0       	rjmp	.+4      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43a:	6f ef       	ldi	r22, 0xFF	; 255
 43c:	7f ef       	ldi	r23, 0xFF	; 255
 43e:	c5 01       	movw	r24, r10
 440:	0e 94 44 03 	call	0x688	; 0x688 <strnlen_P>
 444:	4c 01       	movw	r8, r24
 446:	f3 2d       	mov	r31, r3
 448:	f0 68       	ori	r31, 0x80	; 128
 44a:	3f 2e       	mov	r3, r31
 44c:	82 01       	movw	r16, r4
 44e:	33 fc       	sbrc	r3, 3
 450:	1b c0       	rjmp	.+54     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 452:	82 2d       	mov	r24, r2
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	88 16       	cp	r8, r24
 458:	99 06       	cpc	r9, r25
 45a:	b0 f4       	brcc	.+44     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 45c:	b6 01       	movw	r22, r12
 45e:	80 e2       	ldi	r24, 0x20	; 32
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 466:	2a 94       	dec	r2
 468:	f4 cf       	rjmp	.-24     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 46a:	f5 01       	movw	r30, r10
 46c:	37 fc       	sbrc	r3, 7
 46e:	85 91       	lpm	r24, Z+
 470:	37 fe       	sbrs	r3, 7
 472:	81 91       	ld	r24, Z+
 474:	5f 01       	movw	r10, r30
 476:	b6 01       	movw	r22, r12
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 47e:	21 10       	cpse	r2, r1
 480:	2a 94       	dec	r2
 482:	21 e0       	ldi	r18, 0x01	; 1
 484:	82 1a       	sub	r8, r18
 486:	91 08       	sbc	r9, r1
 488:	81 14       	cp	r8, r1
 48a:	91 04       	cpc	r9, r1
 48c:	71 f7       	brne	.-36     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 48e:	e8 c0       	rjmp	.+464    	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 490:	84 36       	cpi	r24, 0x64	; 100
 492:	11 f0       	breq	.+4      	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 494:	89 36       	cpi	r24, 0x69	; 105
 496:	41 f5       	brne	.+80     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 498:	f8 01       	movw	r30, r16
 49a:	37 fe       	sbrs	r3, 7
 49c:	07 c0       	rjmp	.+14     	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 49e:	60 81       	ld	r22, Z
 4a0:	71 81       	ldd	r23, Z+1	; 0x01
 4a2:	82 81       	ldd	r24, Z+2	; 0x02
 4a4:	93 81       	ldd	r25, Z+3	; 0x03
 4a6:	0c 5f       	subi	r16, 0xFC	; 252
 4a8:	1f 4f       	sbci	r17, 0xFF	; 255
 4aa:	08 c0       	rjmp	.+16     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 4ac:	60 81       	ld	r22, Z
 4ae:	71 81       	ldd	r23, Z+1	; 0x01
 4b0:	07 2e       	mov	r0, r23
 4b2:	00 0c       	add	r0, r0
 4b4:	88 0b       	sbc	r24, r24
 4b6:	99 0b       	sbc	r25, r25
 4b8:	0e 5f       	subi	r16, 0xFE	; 254
 4ba:	1f 4f       	sbci	r17, 0xFF	; 255
 4bc:	f3 2d       	mov	r31, r3
 4be:	ff 76       	andi	r31, 0x6F	; 111
 4c0:	3f 2e       	mov	r3, r31
 4c2:	97 ff       	sbrs	r25, 7
 4c4:	09 c0       	rjmp	.+18     	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 4c6:	90 95       	com	r25
 4c8:	80 95       	com	r24
 4ca:	70 95       	com	r23
 4cc:	61 95       	neg	r22
 4ce:	7f 4f       	sbci	r23, 0xFF	; 255
 4d0:	8f 4f       	sbci	r24, 0xFF	; 255
 4d2:	9f 4f       	sbci	r25, 0xFF	; 255
 4d4:	f0 68       	ori	r31, 0x80	; 128
 4d6:	3f 2e       	mov	r3, r31
 4d8:	2a e0       	ldi	r18, 0x0A	; 10
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	a3 01       	movw	r20, r6
 4de:	0e 94 96 03 	call	0x72c	; 0x72c <__ultoa_invert>
 4e2:	88 2e       	mov	r8, r24
 4e4:	86 18       	sub	r8, r6
 4e6:	45 c0       	rjmp	.+138    	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
 4e8:	85 37       	cpi	r24, 0x75	; 117
 4ea:	31 f4       	brne	.+12     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4ec:	23 2d       	mov	r18, r3
 4ee:	2f 7e       	andi	r18, 0xEF	; 239
 4f0:	b2 2e       	mov	r11, r18
 4f2:	2a e0       	ldi	r18, 0x0A	; 10
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	25 c0       	rjmp	.+74     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 4f8:	93 2d       	mov	r25, r3
 4fa:	99 7f       	andi	r25, 0xF9	; 249
 4fc:	b9 2e       	mov	r11, r25
 4fe:	8f 36       	cpi	r24, 0x6F	; 111
 500:	c1 f0       	breq	.+48     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 502:	18 f4       	brcc	.+6      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 504:	88 35       	cpi	r24, 0x58	; 88
 506:	79 f0       	breq	.+30     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 508:	b5 c0       	rjmp	.+362    	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 50a:	80 37       	cpi	r24, 0x70	; 112
 50c:	19 f0       	breq	.+6      	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 50e:	88 37       	cpi	r24, 0x78	; 120
 510:	21 f0       	breq	.+8      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 512:	b0 c0       	rjmp	.+352    	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 514:	e9 2f       	mov	r30, r25
 516:	e0 61       	ori	r30, 0x10	; 16
 518:	be 2e       	mov	r11, r30
 51a:	b4 fe       	sbrs	r11, 4
 51c:	0d c0       	rjmp	.+26     	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
 51e:	fb 2d       	mov	r31, r11
 520:	f4 60       	ori	r31, 0x04	; 4
 522:	bf 2e       	mov	r11, r31
 524:	09 c0       	rjmp	.+18     	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
 526:	34 fe       	sbrs	r3, 4
 528:	0a c0       	rjmp	.+20     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 52a:	29 2f       	mov	r18, r25
 52c:	26 60       	ori	r18, 0x06	; 6
 52e:	b2 2e       	mov	r11, r18
 530:	06 c0       	rjmp	.+12     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
 532:	28 e0       	ldi	r18, 0x08	; 8
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	05 c0       	rjmp	.+10     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 538:	20 e1       	ldi	r18, 0x10	; 16
 53a:	30 e0       	ldi	r19, 0x00	; 0
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 53e:	20 e1       	ldi	r18, 0x10	; 16
 540:	32 e0       	ldi	r19, 0x02	; 2
 542:	f8 01       	movw	r30, r16
 544:	b7 fe       	sbrs	r11, 7
 546:	07 c0       	rjmp	.+14     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
 548:	60 81       	ld	r22, Z
 54a:	71 81       	ldd	r23, Z+1	; 0x01
 54c:	82 81       	ldd	r24, Z+2	; 0x02
 54e:	93 81       	ldd	r25, Z+3	; 0x03
 550:	0c 5f       	subi	r16, 0xFC	; 252
 552:	1f 4f       	sbci	r17, 0xFF	; 255
 554:	06 c0       	rjmp	.+12     	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
 556:	60 81       	ld	r22, Z
 558:	71 81       	ldd	r23, Z+1	; 0x01
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	0e 5f       	subi	r16, 0xFE	; 254
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	a3 01       	movw	r20, r6
 564:	0e 94 96 03 	call	0x72c	; 0x72c <__ultoa_invert>
 568:	88 2e       	mov	r8, r24
 56a:	86 18       	sub	r8, r6
 56c:	fb 2d       	mov	r31, r11
 56e:	ff 77       	andi	r31, 0x7F	; 127
 570:	3f 2e       	mov	r3, r31
 572:	36 fe       	sbrs	r3, 6
 574:	0d c0       	rjmp	.+26     	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 576:	23 2d       	mov	r18, r3
 578:	2e 7f       	andi	r18, 0xFE	; 254
 57a:	a2 2e       	mov	r10, r18
 57c:	89 14       	cp	r8, r9
 57e:	58 f4       	brcc	.+22     	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 580:	34 fe       	sbrs	r3, 4
 582:	0b c0       	rjmp	.+22     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 584:	32 fc       	sbrc	r3, 2
 586:	09 c0       	rjmp	.+18     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 588:	83 2d       	mov	r24, r3
 58a:	8e 7e       	andi	r24, 0xEE	; 238
 58c:	a8 2e       	mov	r10, r24
 58e:	05 c0       	rjmp	.+10     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 590:	b8 2c       	mov	r11, r8
 592:	a3 2c       	mov	r10, r3
 594:	03 c0       	rjmp	.+6      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 596:	b8 2c       	mov	r11, r8
 598:	01 c0       	rjmp	.+2      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 59a:	b9 2c       	mov	r11, r9
 59c:	a4 fe       	sbrs	r10, 4
 59e:	0f c0       	rjmp	.+30     	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
 5a0:	fe 01       	movw	r30, r28
 5a2:	e8 0d       	add	r30, r8
 5a4:	f1 1d       	adc	r31, r1
 5a6:	80 81       	ld	r24, Z
 5a8:	80 33       	cpi	r24, 0x30	; 48
 5aa:	21 f4       	brne	.+8      	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 5ac:	9a 2d       	mov	r25, r10
 5ae:	99 7e       	andi	r25, 0xE9	; 233
 5b0:	a9 2e       	mov	r10, r25
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5b4:	a2 fe       	sbrs	r10, 2
 5b6:	06 c0       	rjmp	.+12     	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5b8:	b3 94       	inc	r11
 5ba:	b3 94       	inc	r11
 5bc:	04 c0       	rjmp	.+8      	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5be:	8a 2d       	mov	r24, r10
 5c0:	86 78       	andi	r24, 0x86	; 134
 5c2:	09 f0       	breq	.+2      	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5c4:	b3 94       	inc	r11
 5c6:	a3 fc       	sbrc	r10, 3
 5c8:	11 c0       	rjmp	.+34     	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5ca:	a0 fe       	sbrs	r10, 0
 5cc:	06 c0       	rjmp	.+12     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5ce:	b2 14       	cp	r11, r2
 5d0:	88 f4       	brcc	.+34     	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
 5d2:	28 0c       	add	r2, r8
 5d4:	92 2c       	mov	r9, r2
 5d6:	9b 18       	sub	r9, r11
 5d8:	0e c0       	rjmp	.+28     	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5da:	b2 14       	cp	r11, r2
 5dc:	60 f4       	brcc	.+24     	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5de:	b6 01       	movw	r22, r12
 5e0:	80 e2       	ldi	r24, 0x20	; 32
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 5e8:	b3 94       	inc	r11
 5ea:	f7 cf       	rjmp	.-18     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5ec:	b2 14       	cp	r11, r2
 5ee:	18 f4       	brcc	.+6      	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5f0:	2b 18       	sub	r2, r11
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5f4:	98 2c       	mov	r9, r8
 5f6:	21 2c       	mov	r2, r1
 5f8:	a4 fe       	sbrs	r10, 4
 5fa:	10 c0       	rjmp	.+32     	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
 5fc:	b6 01       	movw	r22, r12
 5fe:	80 e3       	ldi	r24, 0x30	; 48
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 606:	a2 fe       	sbrs	r10, 2
 608:	17 c0       	rjmp	.+46     	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 60a:	a1 fc       	sbrc	r10, 1
 60c:	03 c0       	rjmp	.+6      	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 60e:	88 e7       	ldi	r24, 0x78	; 120
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	02 c0       	rjmp	.+4      	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
 614:	88 e5       	ldi	r24, 0x58	; 88
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	b6 01       	movw	r22, r12
 61a:	0c c0       	rjmp	.+24     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 61c:	8a 2d       	mov	r24, r10
 61e:	86 78       	andi	r24, 0x86	; 134
 620:	59 f0       	breq	.+22     	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 622:	a1 fe       	sbrs	r10, 1
 624:	02 c0       	rjmp	.+4      	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 626:	8b e2       	ldi	r24, 0x2B	; 43
 628:	01 c0       	rjmp	.+2      	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 62a:	80 e2       	ldi	r24, 0x20	; 32
 62c:	a7 fc       	sbrc	r10, 7
 62e:	8d e2       	ldi	r24, 0x2D	; 45
 630:	b6 01       	movw	r22, r12
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 638:	89 14       	cp	r8, r9
 63a:	38 f4       	brcc	.+14     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 63c:	b6 01       	movw	r22, r12
 63e:	80 e3       	ldi	r24, 0x30	; 48
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 646:	9a 94       	dec	r9
 648:	f7 cf       	rjmp	.-18     	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
 64a:	8a 94       	dec	r8
 64c:	f3 01       	movw	r30, r6
 64e:	e8 0d       	add	r30, r8
 650:	f1 1d       	adc	r31, r1
 652:	80 81       	ld	r24, Z
 654:	b6 01       	movw	r22, r12
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 65c:	81 10       	cpse	r8, r1
 65e:	f5 cf       	rjmp	.-22     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 660:	22 20       	and	r2, r2
 662:	09 f4       	brne	.+2      	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 664:	42 ce       	rjmp	.-892    	; 0x2ea <vfprintf+0x24>
 666:	b6 01       	movw	r22, r12
 668:	80 e2       	ldi	r24, 0x20	; 32
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <fputc>
 670:	2a 94       	dec	r2
 672:	f6 cf       	rjmp	.-20     	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 674:	f6 01       	movw	r30, r12
 676:	86 81       	ldd	r24, Z+6	; 0x06
 678:	97 81       	ldd	r25, Z+7	; 0x07
 67a:	02 c0       	rjmp	.+4      	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 67c:	8f ef       	ldi	r24, 0xFF	; 255
 67e:	9f ef       	ldi	r25, 0xFF	; 255
 680:	2b 96       	adiw	r28, 0x0b	; 11
 682:	e2 e1       	ldi	r30, 0x12	; 18
 684:	0c 94 10 04 	jmp	0x820	; 0x820 <__epilogue_restores__>

00000688 <strnlen_P>:
 688:	fc 01       	movw	r30, r24
 68a:	05 90       	lpm	r0, Z+
 68c:	61 50       	subi	r22, 0x01	; 1
 68e:	70 40       	sbci	r23, 0x00	; 0
 690:	01 10       	cpse	r0, r1
 692:	d8 f7       	brcc	.-10     	; 0x68a <strnlen_P+0x2>
 694:	80 95       	com	r24
 696:	90 95       	com	r25
 698:	8e 0f       	add	r24, r30
 69a:	9f 1f       	adc	r25, r31
 69c:	08 95       	ret

0000069e <strnlen>:
 69e:	fc 01       	movw	r30, r24
 6a0:	61 50       	subi	r22, 0x01	; 1
 6a2:	70 40       	sbci	r23, 0x00	; 0
 6a4:	01 90       	ld	r0, Z+
 6a6:	01 10       	cpse	r0, r1
 6a8:	d8 f7       	brcc	.-10     	; 0x6a0 <strnlen+0x2>
 6aa:	80 95       	com	r24
 6ac:	90 95       	com	r25
 6ae:	8e 0f       	add	r24, r30
 6b0:	9f 1f       	adc	r25, r31
 6b2:	08 95       	ret

000006b4 <fputc>:
 6b4:	0f 93       	push	r16
 6b6:	1f 93       	push	r17
 6b8:	cf 93       	push	r28
 6ba:	df 93       	push	r29
 6bc:	fb 01       	movw	r30, r22
 6be:	23 81       	ldd	r18, Z+3	; 0x03
 6c0:	21 fd       	sbrc	r18, 1
 6c2:	03 c0       	rjmp	.+6      	; 0x6ca <fputc+0x16>
 6c4:	8f ef       	ldi	r24, 0xFF	; 255
 6c6:	9f ef       	ldi	r25, 0xFF	; 255
 6c8:	2c c0       	rjmp	.+88     	; 0x722 <fputc+0x6e>
 6ca:	22 ff       	sbrs	r18, 2
 6cc:	16 c0       	rjmp	.+44     	; 0x6fa <fputc+0x46>
 6ce:	46 81       	ldd	r20, Z+6	; 0x06
 6d0:	57 81       	ldd	r21, Z+7	; 0x07
 6d2:	24 81       	ldd	r18, Z+4	; 0x04
 6d4:	35 81       	ldd	r19, Z+5	; 0x05
 6d6:	42 17       	cp	r20, r18
 6d8:	53 07       	cpc	r21, r19
 6da:	44 f4       	brge	.+16     	; 0x6ec <fputc+0x38>
 6dc:	a0 81       	ld	r26, Z
 6de:	b1 81       	ldd	r27, Z+1	; 0x01
 6e0:	9d 01       	movw	r18, r26
 6e2:	2f 5f       	subi	r18, 0xFF	; 255
 6e4:	3f 4f       	sbci	r19, 0xFF	; 255
 6e6:	31 83       	std	Z+1, r19	; 0x01
 6e8:	20 83       	st	Z, r18
 6ea:	8c 93       	st	X, r24
 6ec:	26 81       	ldd	r18, Z+6	; 0x06
 6ee:	37 81       	ldd	r19, Z+7	; 0x07
 6f0:	2f 5f       	subi	r18, 0xFF	; 255
 6f2:	3f 4f       	sbci	r19, 0xFF	; 255
 6f4:	37 83       	std	Z+7, r19	; 0x07
 6f6:	26 83       	std	Z+6, r18	; 0x06
 6f8:	14 c0       	rjmp	.+40     	; 0x722 <fputc+0x6e>
 6fa:	8b 01       	movw	r16, r22
 6fc:	ec 01       	movw	r28, r24
 6fe:	fb 01       	movw	r30, r22
 700:	00 84       	ldd	r0, Z+8	; 0x08
 702:	f1 85       	ldd	r31, Z+9	; 0x09
 704:	e0 2d       	mov	r30, r0
 706:	09 95       	icall
 708:	89 2b       	or	r24, r25
 70a:	e1 f6       	brne	.-72     	; 0x6c4 <fputc+0x10>
 70c:	d8 01       	movw	r26, r16
 70e:	16 96       	adiw	r26, 0x06	; 6
 710:	8d 91       	ld	r24, X+
 712:	9c 91       	ld	r25, X
 714:	17 97       	sbiw	r26, 0x07	; 7
 716:	01 96       	adiw	r24, 0x01	; 1
 718:	17 96       	adiw	r26, 0x07	; 7
 71a:	9c 93       	st	X, r25
 71c:	8e 93       	st	-X, r24
 71e:	16 97       	sbiw	r26, 0x06	; 6
 720:	ce 01       	movw	r24, r28
 722:	df 91       	pop	r29
 724:	cf 91       	pop	r28
 726:	1f 91       	pop	r17
 728:	0f 91       	pop	r16
 72a:	08 95       	ret

0000072c <__ultoa_invert>:
 72c:	fa 01       	movw	r30, r20
 72e:	aa 27       	eor	r26, r26
 730:	28 30       	cpi	r18, 0x08	; 8
 732:	51 f1       	breq	.+84     	; 0x788 <__ultoa_invert+0x5c>
 734:	20 31       	cpi	r18, 0x10	; 16
 736:	81 f1       	breq	.+96     	; 0x798 <__ultoa_invert+0x6c>
 738:	e8 94       	clt
 73a:	6f 93       	push	r22
 73c:	6e 7f       	andi	r22, 0xFE	; 254
 73e:	6e 5f       	subi	r22, 0xFE	; 254
 740:	7f 4f       	sbci	r23, 0xFF	; 255
 742:	8f 4f       	sbci	r24, 0xFF	; 255
 744:	9f 4f       	sbci	r25, 0xFF	; 255
 746:	af 4f       	sbci	r26, 0xFF	; 255
 748:	b1 e0       	ldi	r27, 0x01	; 1
 74a:	3e d0       	rcall	.+124    	; 0x7c8 <__ultoa_invert+0x9c>
 74c:	b4 e0       	ldi	r27, 0x04	; 4
 74e:	3c d0       	rcall	.+120    	; 0x7c8 <__ultoa_invert+0x9c>
 750:	67 0f       	add	r22, r23
 752:	78 1f       	adc	r23, r24
 754:	89 1f       	adc	r24, r25
 756:	9a 1f       	adc	r25, r26
 758:	a1 1d       	adc	r26, r1
 75a:	68 0f       	add	r22, r24
 75c:	79 1f       	adc	r23, r25
 75e:	8a 1f       	adc	r24, r26
 760:	91 1d       	adc	r25, r1
 762:	a1 1d       	adc	r26, r1
 764:	6a 0f       	add	r22, r26
 766:	71 1d       	adc	r23, r1
 768:	81 1d       	adc	r24, r1
 76a:	91 1d       	adc	r25, r1
 76c:	a1 1d       	adc	r26, r1
 76e:	20 d0       	rcall	.+64     	; 0x7b0 <__ultoa_invert+0x84>
 770:	09 f4       	brne	.+2      	; 0x774 <__ultoa_invert+0x48>
 772:	68 94       	set
 774:	3f 91       	pop	r19
 776:	2a e0       	ldi	r18, 0x0A	; 10
 778:	26 9f       	mul	r18, r22
 77a:	11 24       	eor	r1, r1
 77c:	30 19       	sub	r19, r0
 77e:	30 5d       	subi	r19, 0xD0	; 208
 780:	31 93       	st	Z+, r19
 782:	de f6       	brtc	.-74     	; 0x73a <__ultoa_invert+0xe>
 784:	cf 01       	movw	r24, r30
 786:	08 95       	ret
 788:	46 2f       	mov	r20, r22
 78a:	47 70       	andi	r20, 0x07	; 7
 78c:	40 5d       	subi	r20, 0xD0	; 208
 78e:	41 93       	st	Z+, r20
 790:	b3 e0       	ldi	r27, 0x03	; 3
 792:	0f d0       	rcall	.+30     	; 0x7b2 <__ultoa_invert+0x86>
 794:	c9 f7       	brne	.-14     	; 0x788 <__ultoa_invert+0x5c>
 796:	f6 cf       	rjmp	.-20     	; 0x784 <__ultoa_invert+0x58>
 798:	46 2f       	mov	r20, r22
 79a:	4f 70       	andi	r20, 0x0F	; 15
 79c:	40 5d       	subi	r20, 0xD0	; 208
 79e:	4a 33       	cpi	r20, 0x3A	; 58
 7a0:	18 f0       	brcs	.+6      	; 0x7a8 <__ultoa_invert+0x7c>
 7a2:	49 5d       	subi	r20, 0xD9	; 217
 7a4:	31 fd       	sbrc	r19, 1
 7a6:	40 52       	subi	r20, 0x20	; 32
 7a8:	41 93       	st	Z+, r20
 7aa:	02 d0       	rcall	.+4      	; 0x7b0 <__ultoa_invert+0x84>
 7ac:	a9 f7       	brne	.-22     	; 0x798 <__ultoa_invert+0x6c>
 7ae:	ea cf       	rjmp	.-44     	; 0x784 <__ultoa_invert+0x58>
 7b0:	b4 e0       	ldi	r27, 0x04	; 4
 7b2:	a6 95       	lsr	r26
 7b4:	97 95       	ror	r25
 7b6:	87 95       	ror	r24
 7b8:	77 95       	ror	r23
 7ba:	67 95       	ror	r22
 7bc:	ba 95       	dec	r27
 7be:	c9 f7       	brne	.-14     	; 0x7b2 <__ultoa_invert+0x86>
 7c0:	00 97       	sbiw	r24, 0x00	; 0
 7c2:	61 05       	cpc	r22, r1
 7c4:	71 05       	cpc	r23, r1
 7c6:	08 95       	ret
 7c8:	9b 01       	movw	r18, r22
 7ca:	ac 01       	movw	r20, r24
 7cc:	0a 2e       	mov	r0, r26
 7ce:	06 94       	lsr	r0
 7d0:	57 95       	ror	r21
 7d2:	47 95       	ror	r20
 7d4:	37 95       	ror	r19
 7d6:	27 95       	ror	r18
 7d8:	ba 95       	dec	r27
 7da:	c9 f7       	brne	.-14     	; 0x7ce <__ultoa_invert+0xa2>
 7dc:	62 0f       	add	r22, r18
 7de:	73 1f       	adc	r23, r19
 7e0:	84 1f       	adc	r24, r20
 7e2:	95 1f       	adc	r25, r21
 7e4:	a0 1d       	adc	r26, r0
 7e6:	08 95       	ret

000007e8 <__prologue_saves__>:
 7e8:	2f 92       	push	r2
 7ea:	3f 92       	push	r3
 7ec:	4f 92       	push	r4
 7ee:	5f 92       	push	r5
 7f0:	6f 92       	push	r6
 7f2:	7f 92       	push	r7
 7f4:	8f 92       	push	r8
 7f6:	9f 92       	push	r9
 7f8:	af 92       	push	r10
 7fa:	bf 92       	push	r11
 7fc:	cf 92       	push	r12
 7fe:	df 92       	push	r13
 800:	ef 92       	push	r14
 802:	ff 92       	push	r15
 804:	0f 93       	push	r16
 806:	1f 93       	push	r17
 808:	cf 93       	push	r28
 80a:	df 93       	push	r29
 80c:	cd b7       	in	r28, 0x3d	; 61
 80e:	de b7       	in	r29, 0x3e	; 62
 810:	ca 1b       	sub	r28, r26
 812:	db 0b       	sbc	r29, r27
 814:	0f b6       	in	r0, 0x3f	; 63
 816:	f8 94       	cli
 818:	de bf       	out	0x3e, r29	; 62
 81a:	0f be       	out	0x3f, r0	; 63
 81c:	cd bf       	out	0x3d, r28	; 61
 81e:	09 94       	ijmp

00000820 <__epilogue_restores__>:
 820:	2a 88       	ldd	r2, Y+18	; 0x12
 822:	39 88       	ldd	r3, Y+17	; 0x11
 824:	48 88       	ldd	r4, Y+16	; 0x10
 826:	5f 84       	ldd	r5, Y+15	; 0x0f
 828:	6e 84       	ldd	r6, Y+14	; 0x0e
 82a:	7d 84       	ldd	r7, Y+13	; 0x0d
 82c:	8c 84       	ldd	r8, Y+12	; 0x0c
 82e:	9b 84       	ldd	r9, Y+11	; 0x0b
 830:	aa 84       	ldd	r10, Y+10	; 0x0a
 832:	b9 84       	ldd	r11, Y+9	; 0x09
 834:	c8 84       	ldd	r12, Y+8	; 0x08
 836:	df 80       	ldd	r13, Y+7	; 0x07
 838:	ee 80       	ldd	r14, Y+6	; 0x06
 83a:	fd 80       	ldd	r15, Y+5	; 0x05
 83c:	0c 81       	ldd	r16, Y+4	; 0x04
 83e:	1b 81       	ldd	r17, Y+3	; 0x03
 840:	aa 81       	ldd	r26, Y+2	; 0x02
 842:	b9 81       	ldd	r27, Y+1	; 0x01
 844:	ce 0f       	add	r28, r30
 846:	d1 1d       	adc	r29, r1
 848:	0f b6       	in	r0, 0x3f	; 63
 84a:	f8 94       	cli
 84c:	de bf       	out	0x3e, r29	; 62
 84e:	0f be       	out	0x3f, r0	; 63
 850:	cd bf       	out	0x3d, r28	; 61
 852:	ed 01       	movw	r28, r26
 854:	08 95       	ret

00000856 <_exit>:
 856:	f8 94       	cli

00000858 <__stop_program>:
 858:	ff cf       	rjmp	.-2      	; 0x858 <__stop_program>
